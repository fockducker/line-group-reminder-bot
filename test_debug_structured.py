#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Debug ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á _parse_structured_appointment ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
"""

from utils.datetime_parser import SmartDateTimeParser
import logging

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ logging ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π debug information
logging.basicConfig(level=logging.DEBUG)

def test_structured_parsing_direct():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö _parse_structured_appointment ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á"""
    
    appointment_text = """‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 15 ‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏° 2567
‡πÄ‡∏ß‡∏•‡∏≤: 10:00
‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå
‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£/‡πÅ‡∏ú‡∏ô‡∏Å/‡∏ä‡∏±‡πâ‡∏ô: ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A ‡∏ä‡∏±‡πâ‡∏ô 3 ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°
‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•/‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: ‡∏ô‡∏û.‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ
‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: "02-419-7000"
"""
    
    print("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö _parse_structured_appointment ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ===")
    print(f"‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢:\n{appointment_text}")
    print("\n" + "="*60)
    
    parser = SmartDateTimeParser()
    
    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å _parse_structured_appointment ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    result = parser._parse_structured_appointment(appointment_text)
    
    if result:
        print("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å _parse_structured_appointment:")
        for key, value in result.items():
            print(f"   {key}: '{value}'")
            
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ phone_number
        phone_number = result.get('phone_number', '')
        print(f"\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö phone_number:")
        print(f"   Type: {type(phone_number)}")
        print(f"   Value: '{phone_number}'")
        print(f"   Length: {len(phone_number)}")
        
        if phone_number:
            print(f"   ‚úÖ ‡∏°‡∏µ phone_number = '{phone_number}'")
        else:
            print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ phone_number (‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á)")
            
    else:
        print("‚ùå _parse_structured_appointment ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô None")
        
    print("\n" + "="*60)
    
    # ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ extract_appointment_info ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
    print("‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö extract_appointment_info:")
    result2 = parser.extract_appointment_info(appointment_text)
    
    phone_number2 = result2.get('phone_number', '')
    print(f"   phone_number ‡∏à‡∏≤‡∏Å extract_appointment_info: '{phone_number2}'")
    
    return result

if __name__ == "__main__":
    test_structured_parsing_direct()