#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quick test script for Enhanced Smart Parser
"""

import sys
import os
import json
from datetime import datetime

# Add utils to path
sys.path.append(os.path.join(os.path.dirname(__file__), 'utils'))

try:
    from enhanced_smart_parser import EnhancedSmartDateTimeParser
    
    # Test the parser
    parser = EnhancedSmartDateTimeParser()
    
    # Test case from user requirement
    test_text = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î ‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏ö‡πà‡∏≤‡∏¢3‡πÇ‡∏°‡∏á"
    
    print("üß™ Testing Enhanced Smart Parser")
    print("=" * 50)
    print(f"Input: {test_text}")
    print("-" * 50)
    
    result = parser.extract_appointment_info(test_text)
    
    print("üìä Results:")
    print(f"‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢: '{result.get('appointment_title', '')}'")
    print(f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: '{result.get('date', '')}'")
    print(f"‡πÄ‡∏ß‡∏•‡∏≤: '{result.get('time', '')}'")
    print(f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: '{result.get('location', '')}'")
    print(f"‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£/‡πÅ‡∏ú‡∏ô‡∏Å/‡∏ä‡∏±‡πâ‡∏ô: '{result.get('building_dept', '')}'")
    print(f"‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•/‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: '{result.get('contact_person', '')}'")
    print(f"‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: '{result.get('phone_number', '')}'")
    print(f"Confidence: {result.get('confidence', 0):.2f}")
    
    print("\nüìù Full JSON Result:")
    print("-" * 30)
    
    # Clean result for JSON export (remove datetime objects)
    clean_result = {}
    for key, value in result.items():
        if key == 'datetime' and value:
            clean_result[key] = str(value)
        elif key != 'processed_data':  # Skip debug data
            clean_result[key] = value
    
    print(json.dumps(clean_result, ensure_ascii=False, indent=2))
    
    print("\n‚úÖ Parser test completed successfully!")
    
except ImportError as e:
    print(f"‚ùå Import Error: {e}")
    print("Make sure enhanced_smart_parser.py is in utils/ directory")
except Exception as e:
    print(f"‚ùå Error: {e}")
    import traceback
    traceback.print_exc()