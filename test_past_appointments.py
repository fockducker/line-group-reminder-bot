#!/usr/bin/env python3
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï
"""

def test_past_appointment_behavior():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï"""
    
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï")
    print("="*50)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ parse ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï
    from utils.datetime_parser import SmartDateTimeParser
    from datetime import datetime
    import pytz
    
    parser = SmartDateTimeParser()
    bangkok_tz = pytz.timezone('Asia/Bangkok')
    now = datetime.now(bangkok_tz)
    
    print(f"üìÖ ‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {now.strftime('%d/%m/%Y %H:%M')}")
    print()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö structured format ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï
    past_appointment_text = f"""‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢:"‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û"
‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤:"1 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2025 14:00"
‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà:"‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä"
‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•:"‡∏î‡∏£.‡∏™‡∏°‡∏ä‡∏≤‡∏¢"
"""
    
    print("üìù ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ Parse ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï:")
    print(past_appointment_text)
    
    try:
        result = parser.extract_appointment_info(past_appointment_text)
        
        if result and result.get('datetime'):
            appointment_dt = result['datetime']
            print(f"‚úÖ Parse ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {appointment_dt.strftime('%d/%m/%Y %H:%M')}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if appointment_dt < now:
                print(f"‚è∞ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï (‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô)")
                print(f"üìç ‡∏à‡∏∞‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô past_appointments")
                print(f"üîç ‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                print(f"‚ùå ‡∏à‡∏∞*‡πÑ‡∏°‡πà*‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î' (future only)")
            else:
                print(f"üöÄ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï")
                
        else:
            print(f"‚ùå Parse ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    print(f"\n" + "="*50)
    print(f"üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö:")
    print(f"="*50)
    print(f"üéØ **‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï:**")
    print(f"   ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥")
    print(f"   ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï")
    print(f"   üìç ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏õ‡πá‡∏ô '‡∏≠‡∏î‡∏µ‡∏ï' ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
    print(f"")
    print(f"üìã **‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•:**")
    print(f"   üîç '‡∏î‡∏π‡∏ô‡∏±‡∏î' ‚Üí ‚ùå ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)")
    print(f"   üìö '‡∏î‡∏π‡∏ô‡∏±‡∏î‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á' ‚Üí ‚úÖ ‡πÅ‡∏™‡∏î‡∏á (‡∏£‡∏ß‡∏°‡∏≠‡∏î‡∏µ‡∏ï)")
    print(f"   üìä ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí ‚úÖ ‡πÅ‡∏™‡∏î‡∏á (‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á)")
    print(f"")
    print(f"‚ö†Ô∏è **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:**")
    print(f"   ü§î ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≤‡∏à‡∏™‡∏±‡∏ö‡∏™‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î'")
    print(f"   üí° ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï")
    print(f"   üîî ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï")

def test_appointment_categorization():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢"""
    
    print(f"\nüóÇÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:")
    print("="*30)
    
    from datetime import datetime, timedelta
    import pytz
    
    bangkok_tz = pytz.timezone('Asia/Bangkok')
    now = datetime.now(bangkok_tz)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    test_appointments = [
        {
            'note': '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï (1 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß)',
            'datetime': now - timedelta(days=1),
            'category': 'past'
        },
        {
            'note': '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤)',
            'datetime': now + timedelta(hours=1),
            'category': 'future'
        },
        {
            'note': '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤)',
            'datetime': now + timedelta(days=7),
            'category': 'future'
        },
        {
            'note': '‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï (1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß)',
            'datetime': now - timedelta(days=30),
            'category': 'past'
        }
    ]
    
    print(f"üìÖ ‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {now.strftime('%d/%m/%Y %H:%M')}")
    print()
    
    for apt in test_appointments:
        apt_time = apt['datetime']
        is_past = apt_time < now
        expected_category = apt['category']
        actual_category = 'past' if is_past else 'future'
        
        status = "‚úÖ" if actual_category == expected_category else "‚ùå"
        
        print(f"{status} {apt['note']}")
        print(f"     üìÖ {apt_time.strftime('%d/%m/%Y %H:%M')}")
        print(f"     üìÇ ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á: {expected_category}, ‡πÑ‡∏î‡πâ: {actual_category}")
        print(f"     üëÄ ‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î': {'‚ùå ‡πÑ‡∏°‡πà' if is_past else '‚úÖ ‡πÉ‡∏ä‡πà'}")
        print(f"     üìö ‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á': {'‚úÖ ‡πÉ‡∏ä‡πà' if is_past else '‚ùå ‡πÑ‡∏°‡πà'}")
        print()

if __name__ == "__main__":
    test_past_appointment_behavior()
    test_appointment_categorization()
    
    print("\nüéØ **‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:**")
    print("="*40)
    print("‚ùì ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á?")
    print("   ‚Üí ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô")
    print()
    print("‚ùì ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏î‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß?")
    print("   ‚Üí ‡πÉ‡∏ä‡πà! ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
    print()
    print("‚ùì ‡∏à‡∏∞‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏´‡∏°?")
    print("   ‚Üí ‡πÉ‡∏ä‡πà! ‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
    print("   ‚Üí ‡∏à‡∏∞*‡πÑ‡∏°‡πà*‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô '‡∏î‡∏π‡∏ô‡∏±‡∏î' (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)")
    print()
    print("üí° **‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞:**")
    print("   üö® ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï")
    print("   üìã ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏ö‡∏™‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")