#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test the updated appointment title extraction
"""

import sys
import os
from datetime import datetime

# Add the parent directory to Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.enhanced_smart_parser import EnhancedSmartDateTimeParser

def main():
    parser = EnhancedSmartDateTimeParser()
    
    # Test case from user's image
    test_text = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î ‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå ‡∏°‡∏∏‡πà‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ñ‡∏≠‡∏ô‡∏¢‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏µ"
    print(f"üß™ Testing Updated Title Extraction")
    print("=" * 60)
    print(f"Input: {test_text}")
    print("-" * 60)
    
    result = parser.extract_appointment_info(test_text)
    
    print("üìä Results:")
    print(f"  ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢: '{result.get('appointment_title')}'")
    print(f"  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: '{result.get('date')}'")
    print(f"  ‡πÄ‡∏ß‡∏•‡∏≤: '{result.get('time')}'")
    print(f"  ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: '{result.get('location')}'")
    print(f"  ‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: '{result.get('contact_person')}'")
    print(f"  Confidence: '{result.get('confidence')}'")
    
    print("\nüìù Expected vs Actual:")
    expected_title = "‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå ‡∏°‡∏∏‡πà‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ñ‡∏≠‡∏ô‡∏¢‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏µ"
    actual_title = result.get('appointment_title')
    print(f"  Title: Expected '{expected_title}'")
    print(f"         Got      '{actual_title}'")
    print(f"         Status: {'‚úÖ' if expected_title in actual_title or len(actual_title) > len(expected_title)*0.8 else '‚ùå'}")
    
    # Additional test cases
    additional_tests = [
        "‡∏ô‡∏±‡∏î‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ 6‡πÇ‡∏°‡∏á‡πÄ‡∏¢‡πá‡∏ô",
        "‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤ 10‡πÇ‡∏°‡∏á‡πÄ‡∏ä‡πâ‡∏≤",
        "‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏π‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå ‡∏ö‡πà‡∏≤‡∏¢2‡πÇ‡∏°‡∏á",
    ]
    
    print("\nüîÑ Additional Tests:")
    print("-" * 40)
    
    for i, test in enumerate(additional_tests, 1):
        print(f"{i}. Input: {test}")
        result = parser.extract_appointment_info(test)
        print(f"   Title: '{result.get('appointment_title')}'")
        print(f"   Contact: '{result.get('contact_person')}'")
        print()

if __name__ == "__main__":
    main()
    input("Press Enter to exit...")